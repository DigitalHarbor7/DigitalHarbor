name: ☁ ️Deploy to Cloudflare Pages

on:
  workflow_dispatch: 
  workflow_run: 
    workflows:
      - Push pages branch in DigitalHarbor
    types:
      - completed
  push:
    branches:
      # - main
      # - develop
      - pages
      - pages-dev

jobs:
  tag-and-deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - name: Checkout main code
        uses: actions/checkout@v2
        if: github.ref_name == 'main'
        with:
          ref: pages

      - name: Checkout develop code
        uses: actions/checkout@v2
        if: github.ref_name == 'develop'
        with:
          ref: pages-dev

      - name: Tag the version
        run: |
          git config remote.origin.fetch '+refs/tags/*:refs/tags/*'
          git fetch -a
          # find most recent tag
          # Get the list of git tags
          tags=$(git tag --sort=-version:refname)

          # Extract the highest number from the tags
          highest_tag=$(echo "$tags" | head -n 1 | sed 's/v//')

          # Convert the highest tag to an integer
          highest_number=$(($highest_tag))

          # Increment the highest number by 1
          next_number=$(($highest_number + 1))

          # Set a variable to the next highest number
          next_tag="v$next_number"
          echo "Next tag: $next_tag"
          # Print the next tag
          git tag $next_tag
          git push origin $next_tag

      - name: Setup Node.js
        uses: actions/setup-node@v2
        with:
          node-version: "20"

      - name: Install latest version of Wrangler
        run: npm install -g wrangler
        # TODO: I don't think I need to deploy with wrangler except for the first time?
      - name: Set deployment variables and deploy
        env:
          CLOUDFLARE_API_TOKEN: ${{ secrets.CF_API_TOKEN }}
        run: |
          # deploy me first
          npx wrangler pages deploy "_site" --project-name="mydigitalharbor-com"
          # Look just for files for sites that have their own domain, the rest are just routes on my site
          for dir in $(find _site/* \( -type d -name "*-band" -o -name "*-com" \) -maxdepth 0 -not \( -name "assets" -o -name "payment" -o -name "qr" -o -name "example" \)); do
              echo "Deploying $dir"
              PROJECT_NAME=$(basename "$dir")
              npx wrangler pages deploy "_site/$PROJECT_NAME" --project-name="$PROJECT_NAME" || echo "failed deploying $PROJECT_NAME"
          done

          # For people with multiple domains - like josh having 1man1.band and 1man1band.com, to ensure I have just the 1 index.html I'll hardcode the seperate project deployment
          # TODO: I think with site generator duplicating this it can go away since there's just 2 versions of the site
          echo "deploying 1man1band.com"
          npx wrangler pages deploy "_site/1man1-band" --project-name="1man1band-com"

      # - name: Set deployment variables and deploy only if there's changes
      #   env:
      #     CLOUDFLARE_API_TOKEN: ${{ secrets.CF_API_TOKEN }}
      #   run: |
      #     MAIN_COMMIT=$(git rev-parse main)
      #     CURRENT_COMMIT=${{ github.sha }}
      #     for dir in $(find _site/* -maxdepth 0 -type d -not \( -name "assets" -o -name "payment" -o -name "qr" -o -name "example" \)); do
      #       diff_output=$(git diff --name-only $MAIN_COMMIT $CURRENT_COMMIT -- $dir)
      #         echo "Deploying $dir"
      #         PROJECT_NAME=$(basename "$dir")
      #         npx wrangler pages deploy "_site/$PROJECT_NAME" --project-name="$PROJECT_NAME" else
      #       else
      #         echo "Skipping deployment for $dir as there are no file changes."
      #       fi
      #     done

      #     # For people with multiple domains - like josh having 1man1.band and 1man1band.com, to ensure I have just the 1 index.html I'll hardcode the seperate project deployment
      #     diff_output=$(git diff --name-only $MAIN_COMMIT $CURRENT_COMMIT -- _site/1man1-band)
      #     if [[ -n $diff_output ]]; then
      #       echo "deploying 1man1band.com"
      #       npx wrangler pages deploy "_site/1man1-band" --project-name="1man1band-com"
      #     else 
      #       echo "Skipping 1man1band.com"
      #     fi

      #     npx wrangler pages deploy "_site" --project-name="mydigitalharbor-com"
